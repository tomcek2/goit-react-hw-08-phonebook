{"version":3,"file":"static/js/310.e22e145c.chunk.js","mappings":"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","sources":["components/Styles.styled.js","components/Filter.jsx","redux/selectors.js","components/ContactList.jsx","components/ContactInput.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  padding: 0 20px;\n  gap: 20px;\n  border-bottom: 3px solid rgba(151, 151, 151, 0.31);\n`;\nexport const NewContactLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  padding: 10px 0;\n  gap: 10px;\n  margin: 0;\n`;\nexport const Input = styled.input`\n  width: 200px;\n`;\nexport const ContactUlList = styled.ul`\n  padding: 0 20px;\n  margin: 0;\n`;\nexport const ContactButton = styled.button`\n  margin-left: 10px;\n`;\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  padding: 10px 0;\n  gap: 10px;\n`;\n","import React, { useRef } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { setFilter } from '../redux/filterSlice';\nimport { Input, FilterLabel } from './Styles.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterRef = useRef();\n\n  const handleFilterChange = e => {\n    const newFilter = e.target.value.trim();\n    dispatch(setFilter(newFilter));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name:\n      <Input\n        type=\"text\"\n        ref={filterRef}\n        placeholder=\"Search by name...\"\n        onChange={handleFilterChange}\n      />\n    </FilterLabel>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter;\nexport const selectError = state => state.contact.error;\nexport const selectContact = state => state.contact.items;\nexport const selectIsLoading = state => state.contact.isLoading;\n\nexport const filteredContacts = createSelector(\n  [selectContact, selectFilter],\n  (contact, filter) => {\n    const filterLower = filter.toLowerCase();\n    if (!filterLower) {\n      return contact;\n    }\n\n    const filteredList = contact.filter(cont => {\n      return cont.name.toLowerCase().includes(filterLower);\n    });\n    return filteredList;\n  }\n);\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { deleteContact } from '../redux/operations';\nimport { filteredContacts } from '../redux/selectors';\n\nimport { ContactUlList, ContactButton } from './Styles.styled';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const contacts = useSelector(filteredContacts);\n\n  return (\n    <div>\n      <h2>Contacts</h2>\n      <ContactUlList>\n        {contacts.map(contact => (\n          <li key={contact.id}>\n            {contact.name}: {contact.number}\n            <ContactButton onClick={() => handleDelete(contact.id)}>\n              Delete\n            </ContactButton>\n          </li>\n        ))}\n      </ContactUlList>\n    </div>\n  );\n};\n","import React, { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContact } from '../redux/operations';\nimport { selectContact } from '../redux/selectors';\n\nimport { NewContactLabel, Input } from 'components/Styles.styled';\n\nexport const ContactInput = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContact);\n  const nameRef = useRef();\n  const numberRef = useRef();\n\n  const handleAddContact = newContact => {\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n      )\n    ) {\n      alert(`${newContact.name} is already in contacts.`);\n    } else {\n      dispatch(\n        addContact({ name: newContact.name, number: newContact.number })\n      );\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n\n    const name = nameRef.current.value.trim();\n    const inputNumber = numberRef.current.value.trim();\n    const number = `${inputNumber.slice(0, 3)}-${inputNumber.slice(\n      3,\n      5\n    )}-${inputNumber.slice(5)}`;\n\n    const namePattern =\n      /^[a-zA-Z\\u0400-\\u04FF]+(([' -][a-zA-Z\\u0400-\\u04FF ])?[a-zA-Z\\u0400-\\u04FF]*)*$/;\n    const numberPattern =\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\n    if (!namePattern.test(name)) {\n      alert(\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      );\n      return;\n    } else if (!numberPattern.test(number)) {\n      alert(\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n      );\n      return;\n    }\n\n    const newContact = {\n      name: name,\n      number: number,\n    };\n\n    handleAddContact(newContact);\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <NewContactLabel>\n        Name:\n        <Input type=\"text\" required ref={nameRef} />\n      </NewContactLabel>\n      <NewContactLabel>\n        Phone Number:\n        <Input type=\"tel\" required ref={numberRef} />\n      </NewContactLabel>\n      <button type=\"submit\">Add Contact</button>\n    </form>\n  );\n};\n","import React, { useEffect } from 'react';\n\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport { ContactInput } from 'components/ContactInput';\n\nimport { fetchContacts } from '../redux/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectIsLoading, selectError } from '../redux/selectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Contact Book</h1>\n      <ContactInput />\n      <Filter />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <ContactList />\n    </div>\n  );\n};\n\nexport default Contacts;\n"],"names":["NewContactLabel","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","Input","_templateObject3","ContactUlList","_templateObject4","ContactButton","_templateObject5","FilterLabel","_templateObject6","Filter","dispatch","useDispatch","filterRef","useRef","_jsxs","children","_jsx","type","ref","placeholder","onChange","e","newFilter","target","value","trim","setFilter","selectError","state","contact","error","selectContact","items","selectIsLoading","isLoading","filteredContacts","createSelector","filter","filterLower","toLowerCase","cont","name","includes","ContactList","contacts","useSelector","map","number","onClick","id","deleteContact","ContactInput","nameRef","numberRef","onSubmit","event","preventDefault","form","current","inputNumber","concat","slice","test","newContact","some","alert","addContact","handleAddContact","reset","required","useEffect","fetchContacts"],"sourceRoot":""}