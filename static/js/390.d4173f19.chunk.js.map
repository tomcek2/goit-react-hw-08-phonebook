{"version":3,"file":"static/js/390.d4173f19.chunk.js","mappings":"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","sources":["components/Filter.jsx","redux/contacts/contactSelectors.js","components/ContactList.jsx","components/ContactInput.jsx","pages/Contacts.jsx"],"sourcesContent":["import React, { useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Box, Input, FormControl, FormLabel } from '@chakra-ui/react';\n\nimport { setFilter } from '../redux/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterRef = useRef();\n\n  const handleFilterChange = e => {\n    const newFilter = e.target.value.trim();\n    dispatch(setFilter(newFilter));\n  };\n\n  return (\n    <Box\n      border=\"1px solid teal\"\n      borderRadius=\"md\"\n      transition=\"background-color 0.3s ease\"\n      _hover={{ backgroundColor: 'rgba(0,128,128,0.1)' }}\n    >\n      <FormControl>\n        <FormLabel ml={2}>Find contacts by name:</FormLabel>\n        <Input\n          type=\"text\"\n          ref={filterRef}\n          placeholder=\"Search by name...\"\n          onChange={handleFilterChange}\n          _focus={{\n            borderColor: 'orange.300',\n            boxShadow: '0 0 0 2px #F59E0B',\n          }}\n        />\n      </FormControl>\n    </Box>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilter = state => state.filter;\nexport const selectError = state => state.contact.error;\nexport const selectContact = state => state.contact.items;\nexport const selectIsLoading = state => state.contact.isLoading;\n\nexport const filteredContacts = createSelector(\n  [selectContact, selectFilter],\n  (contact, filter) => {\n    const filterLower = filter.toLowerCase();\n    if (!filterLower) {\n      return contact;\n    }\n\n    const filteredList = contact.filter(cont => {\n      return cont.name.toLowerCase().includes(filterLower);\n    });\n    return filteredList;\n  }\n);\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Box, Text, Button, Heading, Flex } from '@chakra-ui/react';\nimport { RiDeleteBin6Line } from 'react-icons/ri';\n\nimport { deleteContact } from '../redux/contacts/contactOperations';\nimport { filteredContacts } from '../redux/contacts/contactSelectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n\n  const handleDelete = id => {\n    dispatch(deleteContact(id));\n  };\n\n  const contacts = useSelector(filteredContacts);\n\n  return (\n    <Flex\n      width=\"50%\"\n      bg=\"teal.300\"\n      p={4}\n      maxW=\"xl\"\n      borderRadius=\"md\"\n      borderWidth=\"1px\"\n      borderColor=\"orange.200\"\n      flexDirection=\"column\"\n      mx={5}\n    >\n      <Heading as=\"h2\" fontSize=\"xl\" textAlign=\"center\" mb={5}>\n        Contacts\n      </Heading>\n      <Flex flexWrap=\"wrap\" justifyContent=\"space-around\">\n        {contacts.map(contact => (\n          <Box\n            maxW=\"100%\"\n            display=\"flex\"\n            flexDirection=\"column\"\n            alignItems=\"center\"\n            justifyContent=\"space-between\"\n            padding=\"10px\"\n            bg=\"white\"\n            boxShadow=\"md\"\n            borderRadius=\"md\"\n            m={3}\n            transition=\"box-shadow 0.3s ease\"\n            _hover={{\n              boxShadow: '2px 2px orange',\n            }}\n            key={contact.id}\n          >\n            <Text\n              mb={2}\n              fontWeight=\"bold\"\n              isTruncated\n              maxW=\"100%\"\n              whiteSpace=\"nowrap\"\n              overflow=\"hidden\"\n              textOverflow=\"ellipsis\"\n            >\n              {contact.name.length > 40\n                ? `${contact.name.substring(0, 40)}...`\n                : contact.name}\n            </Text>\n            <Text mb={2}>{contact.number}</Text>\n            <Button\n              colorScheme=\"orange\"\n              variant=\"outline\"\n              size=\"sm\"\n              transition=\"background-color 0.3s ease, color 0.3s ease\"\n              _hover={{\n                variant: 'solid',\n                backgroundColor: 'orange',\n                color: 'white',\n              }}\n              rightIcon={<RiDeleteBin6Line />}\n              onClick={() => handleDelete(contact.id)}\n            >\n              Delete\n            </Button>\n          </Box>\n        ))}\n      </Flex>\n    </Flex>\n  );\n};\n","import React, { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../redux/contacts/contactOperations';\nimport { selectContact } from '../redux/contacts/contactSelectors';\nimport {\n  Input,\n  Button,\n  InputGroup,\n  InputLeftElement,\n  FormControl,\n} from '@chakra-ui/react';\nimport { FaSquarePhone } from 'react-icons/fa6';\nimport { FaUserAlt } from 'react-icons/fa';\n\nexport const ContactInput = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContact);\n  const nameRef = useRef();\n  const numberRef = useRef();\n\n  const handleAddContact = newContact => {\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n      )\n    ) {\n      alert(`${newContact.name} is already in contacts.`);\n    } else {\n      dispatch(\n        addContact({ name: newContact.name, number: newContact.number })\n      );\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n\n    const name = nameRef.current.value.trim();\n    const inputNumber = numberRef.current.value.trim();\n    const number = `${inputNumber.slice(0, 3)}-${inputNumber.slice(\n      3,\n      5\n    )}-${inputNumber.slice(5)}`;\n\n    const namePattern =\n      /^[a-zA-Z\\u0400-\\u04FF]+(([' -][a-zA-Z\\u0400-\\u04FF ])?[a-zA-Z\\u0400-\\u04FF]*)*$/;\n    const numberPattern =\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\n\n    if (!namePattern.test(name)) {\n      alert(\n        \"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      );\n      return;\n    } else if (!numberPattern.test(number)) {\n      alert(\n        'Phone number must be digits and can contain spaces, dashes, parentheses and can start with +'\n      );\n      return;\n    }\n\n    const newContact = {\n      name: name,\n      number: number,\n    };\n\n    handleAddContact(newContact);\n    form.reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <FormControl mb={4}>\n        <InputGroup>\n          <InputLeftElement pointerEvents=\"none\">\n            <FaUserAlt color=\"teal\" />\n          </InputLeftElement>\n          <Input\n            type=\"text\"\n            placeholder=\"Name\"\n            ref={nameRef}\n            mb={2}\n            isRequired\n            _focus={{\n              borderColor: 'orange.300',\n              boxShadow: '0 0 0 2px #F59E0B',\n            }}\n          />\n        </InputGroup>\n        <InputGroup>\n          <InputLeftElement pointerEvents=\"none\">\n            <FaSquarePhone color=\"teal\" />\n          </InputLeftElement>\n          <Input\n            type=\"tel\"\n            placeholder=\"Phone number\"\n            ref={numberRef}\n            mb={2}\n            isRequired\n            _focus={{\n              borderColor: 'orange.300',\n              boxShadow: '0 0 0 2px #F59E0B',\n            }}\n          />\n        </InputGroup>\n        <Button type=\"submit\" colorScheme=\"teal\" mt={3}>\n          Add Contact\n        </Button>\n      </FormControl>\n    </form>\n  );\n};\n","import React, { useEffect } from 'react';\nimport Helmet from 'react-helmet';\nimport { Flex, Box, Heading } from '@chakra-ui/react';\n\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport { ContactInput } from 'components/ContactInput';\n\nimport { fetchContacts } from '../redux/contacts/contactOperations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectIsLoading,\n  selectError,\n} from '../redux/contacts/contactSelectors';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Box>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <Heading textAlign=\"center\" mb={5}>\n        Contact Book\n      </Heading>\n      <Flex>\n        <Box width=\"50%\" mx={5}>\n          <ContactInput />\n          <Filter />\n          {isLoading && !error && <b>Request in progress...</b>}\n        </Box>\n        <ContactList />\n      </Flex>\n    </Box>\n  );\n};\n\nexport default Contacts;\n"],"names":["Filter","dispatch","useDispatch","filterRef","useRef","_jsx","Box","border","borderRadius","transition","_hover","backgroundColor","children","_jsxs","FormControl","FormLabel","ml","Input","type","ref","placeholder","onChange","e","newFilter","target","value","trim","setFilter","_focus","borderColor","boxShadow","selectError","state","contact","error","selectContact","items","selectIsLoading","isLoading","filteredContacts","createSelector","filter","filterLower","toLowerCase","cont","name","includes","ContactList","contacts","useSelector","Flex","width","bg","p","maxW","borderWidth","flexDirection","mx","Heading","as","fontSize","textAlign","mb","flexWrap","justifyContent","map","display","alignItems","padding","m","Text","fontWeight","isTruncated","whiteSpace","overflow","textOverflow","length","concat","substring","number","Button","colorScheme","variant","size","color","rightIcon","RiDeleteBin6Line","onClick","id","deleteContact","ContactInput","nameRef","numberRef","onSubmit","event","preventDefault","form","current","inputNumber","slice","test","newContact","some","alert","addContact","handleAddContact","reset","InputGroup","InputLeftElement","pointerEvents","FaUserAlt","isRequired","FaSquarePhone","mt","useEffect","fetchContacts","Helmet"],"sourceRoot":""}